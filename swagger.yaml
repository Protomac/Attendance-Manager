swagger: "2.0"
info:
  version: 1.0.0
  title: Easy Node Auth ES6
  description: Public API
  contact:
    email: ishaan@wss.io
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: localhost:8040
basePath: /
schemes:
#  - https
  - http
tags:
  - name: auth
    description: all functions related user accounts
  - name : ticketSupportCustomer
    description : all functions related to customer
  - name : ticketSupportEmployee
    description: all functions related to employee

paths:
  /register/customer:
    post:
      tags:
        - "ticketSupportCustomer"
      summary: customer register
      operationId: customerRegistor
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              custId:
                type : string
              name:
                type : string
              email:
                type : string
              address:
                type : string
              mobile:
                type : string
              password:
                type: string

      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"

  /customer/{id}/dashboard:
    get:
      tags:
        - "ticketSupportCustomer"
      summary:  dashboard of the customer
      operationId: customerDashboard
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the customer
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse" 
            
  
  /customer/{id}/profile:
    get:
      tags:
        - "ticketSupportCustomer"
      summary:  customer profile
      operationId: customerProfile
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the customer
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"  
    
  /tickets/{id}:
    get:
      tags:
        - "ticketSupportCustomer"
      summary:  list all tickets
      operationId: ticketsList
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the customer
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"

  /customer/{id}:
    post:
      tags:
        - "ticketSupportCustomer"
      summary:  create ticket
      operationId: createticket
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the customer
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              title:
                type : string
              description:
                type : string
              custId : id
              comments :
                type : array
                items : 
                  type : object
              
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"
   
  /tickets/{id}/{status}:
    get:
      tags:
        - "ticketSupportCustomer"
      summary:  ticket list according to status
      operationId: ticketsAccordingToStatus
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the customer
          required: true
          type: string
        - in: path
          name: status
          description: status of the tickets
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"          
          
  /customer/{_id}:
    get:
      tags:
        - "ticketSupportCustomer"
      summary:  details of the ticket
      operationId: ticketDetail
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: _id
          description: _id of the ticket
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse" 

  /login:
    post:
      tags:
        - "auth"
      summary: login
      operationId: login
      consumes:
        - application/json

      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type : string
              password:
                type: string

      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"
  /user:
    post:
      tags:
        - "auth"
      summary: add new user
      operationId: adduser
      consumes:
        - application/json

      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type : string
              password:
                type: string
              userType:
                type: string
                default : "user"

      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"
    get:
         tags:
           - "auth"
         summary: Get all users details
         operationId: getAllUsers
         consumes:
           - application/json

         produces:
           - application/json
         security:
             - bearerAuth: []
         responses:
           '200':
             description: successful operation
             schema:
               $ref: '#/definitions/ApiResponse'

  /user/{_id}:
    get:
      tags:
        - "auth"
      summary: Get user details
      operationId: getUser
      consumes:
        - application/json

      produces:
        - application/json
      parameters:
        - in: path
          name: _id
          description: _id  of the user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      tags:
      - "auth"
      summary: update user
      operationId: userUpdate
      consumes:
      - application/json
      produces:
      - application/json


      parameters:
      - in: path
        name: _id
        description: _id  of the user
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string




      security:
      - bearerAuth: []
      responses:
        "200":
          description: successful operation
            schema:
              $ref: "#/definitions/ApiResponse"
    delete:
      tags:
      - "auth"
      summary: delete user
      operationId:  deleteUser
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: path
        name: _id
        description: _id  of the user
        required: true
        type: string
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'

# ==========================Employee API==========================

  /register/employee:
    post:
      tags:
        - "ticketSupportEmployee"
      summary: employee register
      operationId: employeeRegistor
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              empId:
                type : string
              name:
                type : string
              email:
                type : string
                format: email
              address:
                type : string
              mobile:
                type : string
              password:
                type: string
                format: password
              check:
                type: string
                enum: [emp, admin]
              gender:
                type: string
              salary:
                type: number
              joiningDate:
                type: string
                format: date

      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"

  /employee/{id}/profile:
    get:
      tags:
        - "ticketSupportEmployee"
      summary:  employee profile
      operationId: employeeProfile
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the employee
          required: true
          type: number
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"  

  /employee/{id}/dashboard:
    get:
      tags:
        - "ticketSupportEmployee"
      summary:  dashboard of the employee
      operationId: employeeDashboard
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the employee
          required: true
          type: number
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"

  /employee/{id}/tickets:
    get:
      tags:
        - "ticketSupportEmployee"
      summary:  list all tickets assigned to employee
      operationId: employeeTicketList
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the employee
          required: true
          type: number
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"

  /employee/{id}/{status}:
    get:
      tags:
        - "ticketSupportEmployee"
      summary:  list all tickets assigned to employee according to status
      operationId: empTicketsAccToStatus
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the employee
          required: true
          type: number
        - in: path
          name: status
          description: status of the tickets
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse"          
  
  /detailedticket/{_id}:
    get:
      tags:
        - "ticketSupportEmployee"
      summary:  details of the ticket assigned to employee
      operationId: employeeTicketDetail
      consumes:
        -application/json

      produces:
        -application/json
      parameters:
        - in: path
          name: id
          description: id of the ticket
          required: true
          type: string
      responses:
        "200":
          description: successful operation
          schema:
            $ref: "#/definitions/ApiResponse" 

# ================================================================

securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
definitions:

  ApiResponse:
    type: object
    properties:
      type:
        type: string
      success:
        type: boolean
      error:
        type: boolean
      message:
        type: string
      data:
        type: object

